#Example - 1 : Max Area of Island

class Solution:
    def maxAreaOfIsland(self, grid: List[List[int]]) -> int:
        ROWS,COLS=len(grid),len(grid[0])
        visited=set()

        def DFS(r,c):
            if r<0 or c<0 or r==ROWS or c==COLS or grid[r][c]==0 or (r,c) in visited:
                return 0

            visited.add((r,c))

            return 1+DFS(r+1,c)+DFS(r-1,c)+DFS(r,c+1)+DFS(r,c-1)


        area=0

        for r in range(ROWS):
            for c in range(COLS):
                var=DFS(r,c)
                area=max(area,var)

        return area


#Example - 2 : Flood Fill

class Solution:
    def floodFill(self, image: List[List[int]], sr: int, sc: int, color: int) -> List[List[int]]:
        ROWS,COLS=len(image),len(image[0])
        curr_color=image[sr][sc]

        def DFS(sr,sc):
            if sr<0 or sc<0 or sr==ROWS or sc==COLS or image[sr][sc]!=curr_color or image[sr][sc]== color:
                return 0
            else:
                image[sr][sc]=color
                DFS(sr+1,sc)
                DFS(sr-1,sc)
                DFS(sr,sc+1)
                DFS(sr,sc-1)

        DFS(sr,sc)

        return image
